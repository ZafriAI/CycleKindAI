services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 20

  neo4j:
    image: neo4j:5.22-community
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-password123}
      NEO4J_server_memory_heap_initial__size: 1G
      NEO4J_server_memory_heap_max__size: 2G
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    # Windows-friendly healthcheck (no bash/curl in this image)
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 50
      start_period: 20s

  ollama-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    entrypoint: ["/bin/sh","-lc"]
    command: >
      "ollama pull qwen2.5:1.5b || true;
       ollama pull nomic-embed-text:latest || true"
    volumes:
      - ollama_data:/root/.ollama
    restart: "no"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  api:
    build: ./api
    env_file:
      - ./api/.env.example
    environment:
      DATABASE_URL: postgresql+psycopg://app:app@postgres:5432/appdb
      JWT_SECRET: change-me
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-password123}
      OLLAMA_BASE_URL: http://ollama:11434
      CHAT_MODEL: qwen2.5:1.5b-instruct
      EMBED_MODEL: nomic-embed-text:latest
      PORT: "8000"
      ALLOW_REGISTRATION: "true"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 30

  seed-guidelines:
    image: curlimages/curl:8.8.0
    depends_on:
      api:
        condition: service_healthy
    entrypoint: ["/bin/sh","-lc"]
    command: >
      echo "Seeding demo guidelines..." &&
      curl -s -X POST -H "Content-Type: application/json" -d @/payload/demo_docs.json http://api:8000/ingest &&
      echo "Done."
    volumes:
      - ./payload:/payload
    restart: "no"


volumes:
  pg_data:
  neo4j_data:
  ollama_data:
  minio_data:
